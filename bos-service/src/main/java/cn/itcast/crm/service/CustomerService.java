
package cn.itcast.crm.service;

import java.util.List;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by the JAX-WS RI. JAX-WS RI 2.2.4-b01 Generated
 * source version: 2.2
 * 
 */
@WebService(name = "CustomerService", targetNamespace = "http://service.crm.itcast.cn/")
@XmlSeeAlso({})
public interface CustomerService {

	/**
	 * 
	 * @param arg1
	 * @param arg0
	 */
	@WebMethod
	@RequestWrapper(localName = "assigncustomerstodecidedzone", targetNamespace = "http://service.crm.itcast.cn/", className = "cn.itcast.crm.service.Assigncustomerstodecidedzone")
	@ResponseWrapper(localName = "assigncustomerstodecidedzoneResponse", targetNamespace = "http://service.crm.itcast.cn/", className = "cn.itcast.crm.service.AssigncustomerstodecidedzoneResponse")
	public void assigncustomerstodecidedzone(@WebParam(name = "arg0", targetNamespace = "") String arg0,
			@WebParam(name = "arg1", targetNamespace = "") List<Integer> arg1);

	/**
	 * 
	 * @param arg0
	 * @return returns java.lang.Integer
	 */
	@WebMethod
	@WebResult(targetNamespace = "")
	@RequestWrapper(localName = "findDecidedzoneIdByAddress", targetNamespace = "http://service.crm.itcast.cn/", className = "cn.itcast.crm.service.FindDecidedzoneIdByAddress")
	@ResponseWrapper(localName = "findDecidedzoneIdByAddressResponse", targetNamespace = "http://service.crm.itcast.cn/", className = "cn.itcast.crm.service.FindDecidedzoneIdByAddressResponse")
	public Integer findDecidedzoneIdByAddress(@WebParam(name = "arg0", targetNamespace = "") String arg0);

	/**
	 * 
	 * @return returns java.util.List<cn.itcast.crm.service.Customer>
	 */
	@WebMethod
	@WebResult(targetNamespace = "")
	@RequestWrapper(localName = "findAll", targetNamespace = "http://service.crm.itcast.cn/", className = "cn.itcast.crm.service.FindAll")
	@ResponseWrapper(localName = "findAllResponse", targetNamespace = "http://service.crm.itcast.cn/", className = "cn.itcast.crm.service.FindAllResponse")
	public List<Customer> findAll();

	/**
	 * 
	 * @param arg0
	 * @return returns java.util.List<cn.itcast.crm.service.Customer>
	 */
	@WebMethod
	@WebResult(targetNamespace = "")
	@RequestWrapper(localName = "findListHasAssociation", targetNamespace = "http://service.crm.itcast.cn/", className = "cn.itcast.crm.service.FindListHasAssociation")
	@ResponseWrapper(localName = "findListHasAssociationResponse", targetNamespace = "http://service.crm.itcast.cn/", className = "cn.itcast.crm.service.FindListHasAssociationResponse")
	public List<Customer> findListHasAssociation(@WebParam(name = "arg0", targetNamespace = "") String arg0);

	/**
	 * 
	 * @param arg0
	 * @return returns cn.itcast.crm.service.Customer
	 */
	@WebMethod
	@WebResult(targetNamespace = "")
	@RequestWrapper(localName = "findCustomerByTelephone", targetNamespace = "http://service.crm.itcast.cn/", className = "cn.itcast.crm.service.FindCustomerByTelephone")
	@ResponseWrapper(localName = "findCustomerByTelephoneResponse", targetNamespace = "http://service.crm.itcast.cn/", className = "cn.itcast.crm.service.FindCustomerByTelephoneResponse")
	public Customer findCustomerByTelephone(@WebParam(name = "arg0", targetNamespace = "") String arg0);

	/**
	 * 
	 * @return returns java.util.List<cn.itcast.crm.service.Customer>
	 */
	@WebMethod
	@WebResult(targetNamespace = "")
	@RequestWrapper(localName = "findListNotAssociation", targetNamespace = "http://service.crm.itcast.cn/", className = "cn.itcast.crm.service.FindListNotAssociation")
	@ResponseWrapper(localName = "findListNotAssociationResponse", targetNamespace = "http://service.crm.itcast.cn/", className = "cn.itcast.crm.service.FindListNotAssociationResponse")
	public List<Customer> findListNotAssociation();

}
